{"version":3,"sources":["aws-client-sign.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAC;;;;;;IAEP,SAAS;AACb,WADI,SAAS,CACD,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,KAAK,EAAE;0BADpE,SAAS;;AAEX,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,QAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AAChC,QAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;AACxC,QAAI,CAAC,MAAM,GAAG,KAAK,CAAC;GACrB;;eARG,SAAS;;8BAUH,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,UAAU,EAAE,QAAQ,EAAE;AAC9D,cAAQ,GAAG,QAAQ,IAAI,IAAI,IAAI,EAAE;;;AAAC,AAGlC,UAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC;;;AAAC,AAGlE,UAAI,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,CAAC;;;AAAC,AAG/D,UAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,QAAQ,CAAC;;;AAAC,AAG7D,aAAO;AACL,oBAAY,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;AAC3C,uBAAe,EAAE,iCAA+B,IAAI,CAAC,YAAY,SAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAI,IAAI,CAAC,OAAO,SAAI,IAAI,CAAC,QAAQ,yEACpF,IAAI,CAAC,MAAM,GAAG,sBAAsB,GAAG,EAAE,CAAA,oBAAe,SAAS,CAAE;AACnH,8BAAsB,EAAE,IAAI,CAAC,MAAM,IAAI,SAAS;AAChD,cAAM,EAAE,IAAI,CAAC,KAAK;OACnB,CAAC;KACH;;;2CAEsB,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,UAAU,EAAE,IAAI,EAAE;AACvE,aAAO,AAAG,MAAM,CAAC,WAAW,EAAE,WAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,CAAA,UAAK,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,8CAAyC,IAAI,CAAC,KAAK,2BACnK,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAK,IAAI,CAAC,MAAM,GAAG,uBAAuB,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAA,QAAI,uCAC/E,IAAI,CAAC,MAAM,GAAG,sBAAsB,GAAG,EAAE,CAAA,QAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC/G;;;uCAEkB,QAAQ,EAAE,IAAI,EAAE;AACjC,oCAA4B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAK,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAI,IAAI,CAAC,OAAO,SAAI,IAAI,CAAC,QAAQ,uBAAkB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAG;KACpK;;;oCAEe,YAAY,EAAE,IAAI,EAAE;AAClC,aAAO,IAAI,CAAC,IAAI,CACd,IAAI,CAAC,IAAI,CACP,IAAI,CAAC,IAAI,CACP,IAAI,CAAC,IAAI,CACP,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CACtG,EAAE,cAAc,CAClB,EAAE,YAAY,CAChB,CAAC,QAAQ,EAAE,CAAC;KACd;;;0CAEqB,iBAAiB,EAAE;AACvC,UAAI,MAAM,GAAG,EAAE,CAAC;AAChB,UAAI,iBAAiB,EAAE;AACrB,cAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAA,CAAC;iBAAI,MAAM,CAAC,IAAI,CAAI,CAAC,SAAI,kBAAkB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAG;SAAA,CAAC,CAAC;OACrH;AACD,aAAO,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;KAClD;;;+BAEU,GAAG,EAAE;AACd,aAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;KACxC;;;yBAEI,GAAG,EAAE,IAAI,EAAE;AACd,aAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACvC;;;oCAEe,IAAI,EAAE;AACpB,aAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/C;;;mCAEc,IAAI,EAAE;AACnB,aAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KACvE;;;SA3EG,SAAS","file":"aws-client-sign.js","sourcesContent":["/* globals CryptoJS */\n/* exported AWSSigner */\n\n'use strict';\n\nclass AWSSigner {\n  constructor(host, region, service, accessKeyId, secretAccessKey, token) {\n    this._host = host;\n    this._region = region;\n    this._service = service;\n    this._accessKeyId = accessKeyId;\n    this._secretAccessKey = secretAccessKey;\n    this._token = token;\n  }\n\n  signRoute(method, route, queryParameters, stringBody, signDate) {\n    signDate = signDate || new Date();\n\n    // create canonical request\n    let cRequest = this.createCanonicalRequest.apply(this, arguments);\n    // console.log(cRequest, '\\n\\n\\n');\n    // create string to sign\n    let stringToSign = this.createStringToSign(cRequest, signDate);\n    // console.log(stringToSign, '\\n\\n\\n');\n    // create signature for header\n    let signature = this.createSignature(stringToSign, signDate);\n\n    // Create Headers Object\n    return {\n      'x-amz-date': this.getAmzLongDate(signDate),\n      'Authorization': `AWS4-HMAC-SHA256 Credential=${this._accessKeyId}/${this.getAmzShortDate(signDate)}/${this._region}/${this._service}/aws4_request, ` +\n        `SignedHeaders=content-type;host;x-amz-date;${this._token ? 'x-amz-security-token' : ''}, Signature=${signature}`,\n      'x-amz-security-token': this._token || undefined,\n      'host': this._host\n    };\n  }\n\n  createCanonicalRequest(method, route, queryParameters, stringBody, date) {\n    return `${method.toUpperCase()}\\n${route.charAt(0) !== '/' ? '/' + route : route}\\n${this.createQueryParameters(queryParameters)}\\ncontent-type:application/json\\nhost:${this._host}\\n` +\n      `x-amz-date:${this.getAmzLongDate(date)}\\n${this._token ? 'x-amz-security-token:' + this._token + '\\n' : ''}\\n` +\n      `content-type;host;x-amz-date;${this._token ? 'x-amz-security-token' : ''}\\n` + this.hashString(stringBody);\n  }\n\n  createStringToSign(cRequest, date) {\n    return `AWS4-HMAC-SHA256\\n${this.getAmzLongDate(date)}\\n${this.getAmzShortDate(date)}/${this._region}/${this._service}/aws4_request\\n${this.hashString(cRequest)}`;\n  }\n\n  createSignature(stringToSign, date) {\n    return this.hmac(\n      this.hmac(\n        this.hmac(\n          this.hmac(\n            this.hmac('AWS4' + this._secretAccessKey, this.getAmzShortDate(date)), this._region), this._service\n        ), 'aws4_request'\n      ), stringToSign\n    ).toString();\n  }\n\n  createQueryParameters(queryParameterObj) {\n    let pieces = [];\n    if (queryParameterObj) {\n      Object.keys(queryParameterObj).sort().forEach(k => pieces.push(`${k}=${encodeURIComponent(queryParameterObj[k])}`));\n    }\n    return pieces.length > 0 ? pieces.join('&') : '';\n  }\n\n  hashString(str) {\n    return CryptoJS.SHA256(str).toString();\n  }\n\n  hmac(key, data) {\n    return CryptoJS.HmacSHA256(data, key);\n  }\n\n  getAmzShortDate(date) {\n    return this.getAmzLongDate(date).substr(0, 8);\n  }\n\n  getAmzLongDate(date) {\n    return date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '').substr(0, 17);\n  }\n}\n"],"sourceRoot":"/source/"}